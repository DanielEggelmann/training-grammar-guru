#!/usr/bin/env python3
# -*- coding: UTF-8 -*-

# Copyright 2016, 2017 Eddie Antonio Santos <easantos@ualberta.ca>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
Takes a vector representing a file with the vocabulary and spits out a
(hopefully) syntactically valid replica of said file.

Pipe this into a JavaScript formatter like js-beautify.

e.g.,

 $ npm install -g js-beautify
 $ ./unvocabularize.py data/javascript-vectors.sqlite3 1 | js-beautify
 var Identifier = Identifier("string");
 Identifier().Identifier(function (Identifier) {
    Identifier.Identifier(`template-head${Identifier}template-tail`);
 });
"""

import warnings

from sensibility import TokenSequence, Vectors


if __name__ == '__main__':
    import sys
    from condensed_corpus import CondensedCorpus
    _, filename, query = sys.argv

    # Attempt to convert the thing into an index.
    try:
        index = int(query)
    except ValueError:
        pass

    corpus = Vectors.connect_to(filename)
    _, tokens = corpus[index]
    program = TokenSequence(tokens)
    program.print()
